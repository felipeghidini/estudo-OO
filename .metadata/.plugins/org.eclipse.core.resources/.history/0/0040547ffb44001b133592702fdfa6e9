package test;


import static org.junit.Assert.*;

import java.util.List;

import org.junit.jupiter.api.Test;

import entities.Livro;
import entities.Loja;
import entities.VideoGame;

public class LojaTest {
	
	private Livro livro;
	private Loja loja;
	private VideoGame videoGame;
	
//	@Before
//	public void setup() {
//		livro = new Livro();
//	}

	@Test
	public void testDescricaoLivro() throws Exception {
		livro = new Livro("Carandiru", 35.00, 2, "Drauzio Varela", "educativo", 1);
		assertEquals(true, true);
	}
	
	@Test
	public void testNomeDoLivro() throws Exception {
		Livro livro = new Livro();
		String autor = livro.getAutor();
		assertEquals(autor, livro.getAutor());
	}
	
	@Test
	public void testTemaDoLivro() throws Exception {
		Livro livro = new Livro();
		String tema = livro.getTema();
		assertEquals(tema, livro.getTema());
	}
	
	@Test
	public void testQtdDePaginasDoLivro() throws Exception {
		Livro livro = new Livro();
		int qtdPag = livro.getQtdPag();
		assertEquals(qtdPag, livro.getQtdPag());
	}
	
	@org.junit.Test
	public void testDescricaoLoja() throws Exception {
		List<Livro> livros = null;
		List<VideoGame> videoGames = null;
		loja = new Loja("Americanas", "08100254", livros, videoGames);
	}
	
	
	@Test
	public void testCalcularImpostoLivroSemImposto() throws Exception {
		livro = new Livro();	
		Livro l3 = new Livro("Java POO", 20, 50, "GFT", "educativo", 500);
		double esperado = l3.calcularImposto();
		assertEquals(0, esperado, 0.01);
	}
	
	@Test
	public void testCalcularImpostoLivroComImposto() throws Exception {
		livro = new Livro();	
		Livro l1 = new Livro("Harry Potter", 40, 50, "J.K. Rowling", "fantasia", 300);
		double esperado = l1.calcularImposto();
		assertEquals(4.0, esperado, 0.01);
	}
	
	@Test
	public void testDescricaoVideoGame() throws Exception {
		videoGame = new VideoGame("PS4", 1800, 100, "Sony", "Slim", false);
		assertEquals(true, true);
	}
	
	
	
	@Test
	public void testCalcularImpostoVideoGameComImposto() throws Exception {
		videoGame = new VideoGame();	
		VideoGame ps4 = new VideoGame("PS4", 1800, 100, "Sony", "Slim", false);
		double esperado = ps4.calcularImposto();
		assertEquals(810, esperado, 0.01);
	}
	
	@Test
	public void testCalcularImpostoVideoGameUsadoComImposto() throws Exception {
		videoGame = new VideoGame();	
		VideoGame ps4Usado = new VideoGame("PS4 Usado", 1000, 7, "Sony", "Slim", true);
		double esperado = ps4Usado.calcularImposto();
		assertEquals(250, esperado, 0.01);
	}
	
	
	@Test
	public void testMarcaDoVideoGame() throws Exception {
		videoGame = new VideoGame();	
		String marca = videoGame.getMarca();
		assertEquals(marca, videoGame.getMarca());
	}
	
	@Test
	public void testModeloDoVideoGame() throws Exception {
		videoGame = new VideoGame();	
		String modelo = videoGame.getModelo();
		assertEquals(modelo, videoGame.getModelo());
	}
	
	@Test
	public void testNomeDaLoja() throws Exception {
		Loja loja = new Loja();
		String nome = loja.getNome();
		assertEquals(nome, loja.getNome());
	}
	
	@Test
	public void testCnpjDaLoja() throws Exception {
		Loja loja = new Loja();
		String cnpj = loja.getCnpj();
		assertEquals(cnpj, loja.getCnpj());
	}
	
	@org.junit.Test
	public void testListaDeLivros() throws Exception {
		Loja loja = new Loja();
		List<Livro> livros = null;
		assertEquals(livros, 2);
	}
}
